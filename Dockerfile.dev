# Base
FROM node:20.0.0-alpine as base
WORKDIR /dist

RUN apk --no-cache add \
    git \
    python3 && \
    # rm /usr/lib/python*/EXTERNALLY-MANAGED && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --no-cache --upgrade pip setuptools

RUN yarn set version 4.1.0


# Python dependencies and build packages
FROM base as python-deps
WORKDIR /dist

RUN apk --no-cache add \
    python3-dev \
    musl-dev \
    gcc \
    g++

COPY ./requirements.txt ./requirements.txt
COPY ./roles_royce ./roles_royce
# COPY ./pyproject.toml ./pyproject.toml
# Copy .git for python build. Somehow this is required
COPY .git .git

# build Python packages
RUN pip3 install -e roles_royce
RUN pip3 install -r requirements.txt


# Builder stage
FROM base as runner
WORKDIR /dist

# Copy package.json and yarn.lock for Yarn installation
COPY package.json yarn.lock ./
COPY app/package.json ./app/
COPY docs/package.json ./docs/

# Install Node.js dependencies in the builder stage
RUN yarn install

# Copy the rest of the app files into the builder stage
COPY . .

RUN yarn install

COPY --from=python-deps /usr/lib/python3.10/site-packages/ /usr/lib/python3.10/site-packages/

# Set environment variables
ENV PYTHONUNBUFFERED 1
ENV PYTHON_PATH=/usr/bin/python3

ENV NEXT_TELEMETRY_DISABLED 1
RUN yarn build

# Expose port
EXPOSE 3000

# Start the app
CMD [ "yarn", "dev" ]
